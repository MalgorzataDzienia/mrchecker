env.workspace = 'example'
pipeline{
	agent {docker {image 'mrchecker/mrchecker:v1.1.3'}}
	stages{
		stage('Build'){
			steps{
				configFileProvider([configFile(fileId: 'deploy-maven-settings', targetLocation: 'settings.xml', variable: 'SETTINGS_PATH')]) {
					echo "Building module ${env.module} and it's dependency"
					sh \"\"\"
					cd ${env.workspace}
					mvn -q -s ${SETTINGS_PATH} clean compile test-compile package install -DskipTests=true
					\"\"\"
				}
				//bulid this module and its dependencies deploy them to local repo
			}
		}
		stage('Test1'){
			steps{
				configFileProvider([configFile(fileId: 'deploy-maven-settings', targetLocation: 'settings.xml', variable: 'SETTINGS_PATH')]) {
					echo "Testing"
					sh \"\"\"
					cd ${env.workspace}
					mvn -q -s ${SETTINGS_PATH} -Pcucumber clean verify -Dbrowser=firefox -Denv=QA -Dcucumber.class=RunMts* allure:report 
					cp ${env.workspace}/target/allure-results allure-results-run1
					\"\"\"
					allure includeProperties: false, jdk: '', report: "allure-report-run1", results: [[path: "allure-results-run1"]]
				}
			}
		}
		stage('Test2'){
			steps{
				configFileProvider([configFile(fileId: 'deploy-maven-settings', targetLocation: 'settings.xml', variable: 'SETTINGS_PATH')]) {
					echo "Testing"
					sh \"\"\"
					cd ${env.workspace}
					mvn -q -s ${SETTINGS_PATH} clean test -Dbrowser=firefox -Ddebug -Dgroups=MTS_GUI,MTS_API allure:report
					cp ${env.workspace}/target/allure-results allure-results-run2
					\"\"\"
					allure includeProperties: false, jdk: '', report: "allure-report-run2", results: [[path: "allure-results-run2"]]
				}
			}
		}
	}
}
